{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clouds from \"../src/assets/clouds.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"d58aba219971924715b5ebbfde38970d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [weeklyForecast, setWeeklyForecast] = useState({}); //api.openweathermap.org/data/2.5/forecast/daily?q=${query}&cnt={cnt}&appid={api.key}\n  //https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=daily&appid=d58aba219971924715b5ebbfde38970d\n  //https://api.openweathermap.org/data/2.5/forecast?q=belgrade&appid=d58aba219971924715b5ebbfde38970d\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`${api.base}forecast?q=${query}&cnt=7&appid=${api.key}`) //fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n    .then(res => res.json()).then(res => {\n      fetch(`${api.base}onecall?lat={lat}&lon={lon}&exclude=daily&appid=${api.key}`).then(res => setWeeklyForecast());\n      console.log(\"weeklyfor\");\n    }).then(result => {\n      setQuery(\"\");\n      setWeather(result);\n      console.log(result);\n    });\n  };\n\n  console.log(weather);\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    let day = days[d.getDay()];\n    let month = months[d.getMonth()];\n    let date = d.getDate(); //let year = d.getFullYear();\n\n    return `${month} ${day} ${date} `;\n  }; //   const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n  //     .then((res) => res.json())\n  //         .then((result) => {\n  //           setQuery(\"\");\n  //           setWeather(result);\n  //     console.log(\"enter\");\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_results\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: clouds,\n          className: \"cloud\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search_bar\",\n            placeholder: \"Please enter your location...\",\n            onChange: e => setQuery(e.target.value),\n            value: query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: weather.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [weather.main && weather.main.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9E4Vfiau9lp8wQr2gLvFNJp4r78=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Lenovo/weather_app/src/App.js"],"names":["React","useState","clouds","api","key","base","App","query","setQuery","weather","setWeather","weeklyForecast","setWeeklyForecast","handleSubmit","e","preventDefault","fetch","then","res","json","console","log","result","dateBuilder","d","months","days","day","getDay","month","getMonth","date","getDate","target","value","name","Date","main","temp"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport clouds from \"../src/assets/clouds.png\";\r\n\r\nconst api = {\r\n  key: \"d58aba219971924715b5ebbfde38970d\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const [weeklyForecast, setWeeklyForecast] = useState({});\r\n\r\n  //api.openweathermap.org/data/2.5/forecast/daily?q=${query}&cnt={cnt}&appid={api.key}\r\n  //https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=daily&appid=d58aba219971924715b5ebbfde38970d\r\n  //https://api.openweathermap.org/data/2.5/forecast?q=belgrade&appid=d58aba219971924715b5ebbfde38970d\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(`${api.base}forecast?q=${query}&cnt=7&appid=${api.key}`)\r\n      //fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        fetch(\r\n          `${api.base}onecall?lat={lat}&lon={lon}&exclude=daily&appid=${api.key}`\r\n        ).then((res) => setWeeklyForecast());\r\n        console.log(\"weeklyfor\");\r\n      })\r\n      .then((result) => {\r\n        setQuery(\"\");\r\n        setWeather(result);\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  console.log(weather);\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let month = months[d.getMonth()];\r\n    let date = d.getDate();\r\n    //let year = d.getFullYear();\r\n\r\n    return `${month} ${day} ${date} `;\r\n  };\r\n\r\n  //   const handleSubmit = (e) => {\r\n  //     e.preventDefault();\r\n  //     fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n  //     .then((res) => res.json())\r\n  //         .then((result) => {\r\n  //           setQuery(\"\");\r\n  //           setWeather(result);\r\n  //     console.log(\"enter\");\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"app_results\">\r\n      <main className=\"main\">\r\n        <div className=\"search_box\">\r\n          <img src={clouds} className=\"cloud\" alt=\"\" />\r\n          <form onSubmit={handleSubmit}>\r\n            {/* <CountrySelector className=\"country_selector\" /> */}\r\n            <input\r\n              type=\"text\"\r\n              className=\"search_bar\"\r\n              placeholder=\"Please enter your location...\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n            />\r\n            {/* <input type=\"submit\" /> */}\r\n          </form>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"location_box\">\r\n            <div className=\"location\">{weather.name}</div>\r\n            <div className=\"date\">{dateBuilder(new Date())}</div>\r\n          </div>\r\n          <div className=\"weather_box\">\r\n            <div className=\"temp\">{weather.main && weather.main.temp}°C</div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}